#include <Adafruit_CircuitPlayground.h>

volatile bool switchFlag = false;  
volatile bool leftPressed = false;
volatile bool rightPressed = false;
int cordX = 20;
int cordY = 20;

void setup() {
  randomSeed(analogRead(0));
  CircuitPlayground.begin();
  Serial.begin(9600);

  pinMode(7, INPUT_PULLUP); //Slide
  pinMode(5, INPUT_PULLDOWN); //Not left
  pinMode(4, INPUT_PULLDOWN); //Left
    attachInterrupt(digitalPinToInterrupt(7), slideSwitchISR, LOW);
    attachInterrupt(digitalPinToInterrupt(5), rightButtonISR, FALLING);
    attachInterrupt(digitalPinToInterrupt(4), leftButtonISR, FALLING);

  Serial.println("Goose on the Loose!");  //loose goose loose goose loose goose... what a fun thing to say :)! If you say this for 
  //long enough it become goose lose instead of loose goose... intersting...
  //storyLine();
    delay(1000);
    randomLocations();
    delay(1000);
    storyRules();
}

void loop() {
bool switchState = CircuitPlayground.slideSwitch(); // true = RIGHT, false = LEFT

if (switchState) {//left button is LG direction when switch is ___ and fight when stitch is ____.
  if (leftPressed) {
    LGDirection();
    leftPressed = false;
  } else {
    LGDistance();
    rightPressed = false;
  }
}
 else {
  if (leftPressed) { //right button is LG distandce when switch is ___ and AP distance when stitch is ____.
    Fight();
    leftPressed = false;
  } if (rightPressed) {
    APDistance();
    rightPressed = false;
    }
  }
}

void leftButtonISR() {
  leftPressed = true;
}
void rightButtonISR() {
  rightPressed = true;
}
void slideSwitchISR() {
  switchFlag = CircuitPlayground.slideSwitch();
}

void LGDirection() {
  int randDirec = random(0, 8);
  CircuitPlayground.setPixelColor(8, 0, 255, 0);//filler light
  CircuitPlayground.setPixelColor(9, 0, 255, 0);//filler light 
  CircuitPlayground.setPixelColor(randDirec, 0, 0, 255);
}

void LGDistance() {
  soundLG();
  for (int i = 0; i < 10; ++i) {
    CircuitPlayground.setPixelColor(i, 0, 0, 25 * (i + 1));
      delay(600 / (i + 1));
  }
  CircuitPlayground.clearPixels();
    delay(750);
  int randValLG = random(2, 5);
  CircuitPlayground.setPixelColor(randValLG, 0, 0, 255);
    delay(5000);
  CircuitPlayground.clearPixels();
}

void Fight() {
soundFight();
  delay(50);
  int randValFIGHT = random(1, 11);
  if (randValFIGHT <= 7) { // loose goose wins
   soundLG ();
    for (int i = 0; i < 10; ++i) {
      CircuitPlayground.setPixelColor(i, 0, 0, 255);
        delay(100);
    }
  } else { // AP wins
   soundAP();
    for (int i = 0; i < 10; ++i) {
      CircuitPlayground.setPixelColor(i, 255, 0, 0);
        delay(100);
    }
  }
}

void APDistance() {
  soundAP();
  for (int i = 0; i < 10; ++i) {
    CircuitPlayground.setPixelColor(i, 25 * (i + 1), 0, 0);
      delay(600 / (i + 1));
  }
  CircuitPlayground.clearPixels();
    delay(750);
  int randValAP = random(2, 7);
  CircuitPlayground.setPixelColor(randValAP, 255, 0, 0);
    delay(5000);
  CircuitPlayground.clearPixels();
}

//character theme songs! like darth vader yk?? (maybe slightly less cool though...?)
void soundLG() { //
  CircuitPlayground.playTone(400, 200);
  CircuitPlayground.playTone(200, 100);
  CircuitPlayground.playTone(800, 100);
  CircuitPlayground.playTone(600, 200);
  CircuitPlayground.playTone(400, 400);
   delay(100);
}
void soundFight() {
  CircuitPlayground.playTone(1200, 300);
  CircuitPlayground.playTone(1000, 200);
  CircuitPlayground.playTone(600, 600);
}

void soundAP() { //too bad the board cant really make goose noises.Imagine the possibilitys...
  CircuitPlayground.playTone(600, 200);//this is the best I got...
  CircuitPlayground.playTone(300, 400);
  CircuitPlayground.playTone(600, 300);
  CircuitPlayground.playTone(700, 300);
  CircuitPlayground.playTone(800, 400);
    delay(100);
}
//print at start to tell rules and scenario and whatnot. 
void storyRules() {
  Serial.println("    Uh-oh! Your 75 year old neighbor's infamously aggressive goose has run away again and posters of the missing goose have filled the neighborhood.");
    delay(250);
  Serial.println("    *As you read something catches your eye*");
    delay(250);
  Serial.println("    The corner of the poster offers $300 to the first person to bring back this loose goose.");
    delay(250);
  Serial.println("    $300?! The options are endless.");
    Serial.println("");
    Serial.println("");
delay(1000);
   Serial.println("   RULES:"); // add my rules here blah blah blah...
      Serial.println("- Loose goose gets to spin each turn for a randomized dirrection");
      Serial.println("- Animal patrol gets to spin once per turn in player defined dirrection");
      Serial.println("- Bread trap skips one Loose Goose turn if crossed.");
      Serial.println("- If an Animal Patrol player goes through an obstical they take twice as to move.");
      Serial.println("- Anamial Patrol and Loose Goose fight if in adjacent tiles.");
      Serial.println("- If Animal Patrol players lose fight, they miss 1 turn and return to start");
      Serial.println("- First Animal Patrol player to win the fight wins the game");
      Serial.println("");
      Serial.println("CONTROLS:");
      Serial.println("- Switch: Right LB=");
      Serial.println("- Switch: Right RB= ");
      Serial.println("- Switch: Left LB=Loose Goose move direction");
      Serial.println("- Switch: Left RB= Animal Patrol move distance");
      Serial.println("");
      Serial.println("OTHER INFO:");
      Serial.println("- In the case of a fight, red = Animal Patrol wins. Blue = Loose Goose wins.");
      Serial.println("- Loose goose movement is a value from 1-8 where 1: +y, 2: +xy, 3:+x and so on in the clockwise dirrection.");
}

void randomLocations() {//go through 3x for each type. Each time through is a new location.
  for (int i = 1; i <= 3; ++i) {
  int x = random( cordX);
  int y = random( cordY);
Serial.print("Bread Trap "); //I think I would fall for a bread trap... I <3 bread. 
Serial.println(i); //really who wouldnt? a celiac? poor celiacs...
Serial.println(x);
Serial.println(y);
delay(500);
}
    Serial.println("");
  for (int i = 1; i <= 3; ++i) {
  int x = random( cordX);
  int y = random( cordY);
Serial.print("Obstacle ");
Serial.println(i);
Serial.println(x); 
Serial.println(y);
delay(500);
}
Serial.println("");
Serial.println("");
delay(500);
}
